name: Create a release
run-name: Publish a ${{ inputs.version_bump }} by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      version_bump:
        required: true
        description: Version number to increase for this release. Follows semantic versioning.
        type: choice
        options:
        - major
        - minor
        - patch

env:
  AWS_REGION: us-east-1
  AWS_DEFAULT_REGION: us-east-1

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version-number: ${{ steps.bump-version.outputs.message }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2.5.0
    - name: Setup Python
      uses: actions/setup-python@v2.3.3
      with:
        python-version: '3.11'
    - name: Install project and other required packages
      run: pip install poetry
    - name: Bump version
      id: bump-version
      run: echo "message=$(poetry version ${{ inputs.version_bump }})" >> $GITHUB_OUTPUT
    - name: Build package
      run: poetry build
    - name: Save build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist

  publish-package-index:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout
      uses: actions/checkout@v2.5.0
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    - name: Get build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist
    - name: Install project and other required packages
      run: |
        pip install poetry
    # - name: Publish package
    #   run: poetry publish

  publish-github:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout
      uses: actions/checkout@v2.5.0
    - name: Get build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist
    - name: Create release
      run: gh release create v${{ needs.build.outputs.version-number }} --generate-notes dist/*

  commit-version-bump:
    runs-on: ubuntu-latest
    needs:
    - build
    - publish-github
    - publish-package-index
    steps:
    - name: Checkout
      uses: actions/checkout@v2.5.0
    - name: Bump version
      run: poetry version ${{ inputs.version_bump }}
    - name: Commit version bump
      uses: EndBug/add-and-commit@v9
      with:
        add: pyproject.toml
        message: ${{ needs.build.outputs.message }}
        push: true
    
    
      


