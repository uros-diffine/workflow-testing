name: Create a release
run-name: Publish a ${{ inputs.version }} by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      version:
        required: true
        description: Version number to increase for this release. Follows semantic versioning.
        type: choice
        options:
        - patch
        - minor
        - major

env:
  AWS_REGION: us-east-1
  AWS_DEFAULT_REGION: us-east-1

jobs:
  commit-version-bump:
    name: Commit the updated version number
    runs-on: ubuntu-latest
    outputs:
      version-number: ${{ steps.bump-version.outputs.version-number }}
    permissions:
      contents: write
    steps:
    - name: Checkout
      uses: actions/checkout@v2.5.0
    - name: Install project and other required packages
      run: pip install poetry
    - name: Bump version
      id: bump-version
      run: |
        MESSAGE=$(poetry version ${{ inputs.version }})
        echo "version-number=$(echo $MESSAGE | cut -d ' ' -f 6)" >> $GITHUB_OUTPUT
    - name: Commit version bump
      uses: EndBug/add-and-commit@v9
      with:
        add: pyproject.toml
        message: ${{ steps.bump-version.outputs.message }}
        push: true

  build:
    name: Build the package
    runs-on: ubuntu-latest
    needs: commit-version-bump
    steps:
    - name: Checkout
      uses: actions/checkout@v2.5.0
    - name: Setup Python
      uses: actions/setup-python@v2.3.3
      with:
        python-version: '3.11'
    - name: Install project and other required packages
      run: pip install poetry
    - name: Build package
      run: poetry build
    - name: Save build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist

  publish-package-index:
    name: Publish to the AWS package index
    runs-on: ubuntu-latest
    needs:
    - build
    - commit-version-bump
    steps:
    - name: Checkout
      uses: actions/checkout@v2.5.0
    # - name: Configure AWS Credentials
    #   uses: aws-actions/configure-aws-credentials@v1-node16
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: ${{ env.AWS_REGION }}
    - name: Get build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist
    - name: Install project and other required packages
      run: |
        pip install poetry
    # - name: Publish package
    #   run: poetry publish

  publish-github:
    name: Create a release on GitHub
    runs-on: ubuntu-latest
    needs:
    - build
    - commit-version-bump
    permissions:
      packages: write
      contents: write
    steps:
    - name: Checkout
      uses: actions/checkout@v2.5.0
    - name: Get build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist
    - name: Create release
      env:
        GH_TOKEN: ${{ github.token }}
      run: gh release create v${{ needs.commit-version-bump.outputs.version-number }} --generate-notes dist/*
    
    
      


